{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","yearInput","onChange","e","changeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","useState","title","setItems","amount","onClick","id","prevItems","filter","index","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMax","max","ExpensesChart","chartDataPoints","getMonth","Expenses","filterYear","setFilterYear","yearExpenses","toString","selectYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onCancel","NewExpense","addExpense","setAddExpense","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","expenses","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b5ccdea6.chunk.js","sourcesContent":["import '../UI/Card.css';\r\n\r\nconst Card = (props) => {\r\n\tconst classes = 'card ' + props.className;\r\n\treturn (\r\n\t\t<div className={classes}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Card\r\n","import \"./ExpenseFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const selectChangeHandler = (e) => {\r\n    props.changeFilter(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.yearInput} onChange={selectChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import '../Expenses/ExpenseDate.css'\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import { useState } from \"react\";\r\nimport \"../Expenses/ExpenseItem.css\";\r\nimport Card from '../UI/Card';\r\nimport ExpenseDate from \"../Expenses/ExpenseDate\";\r\n\r\nconst ExpenseItem = (props) => {\r\n\r\n\tconst [title, setTitle] = useState(props.title);\r\n\tconst [items, setItems] = useState([]);\r\n\r\n\tconst clickHandler = () => {\r\n\t\tsetTitle('updated');\r\n\t\t// props.onDelete(props.id)\r\n\t};\t\r\n\tconst deleteItem = id => {\r\n\t\tsetItems(prevItems => {\r\n\t\t\treturn prevItems.filter(index => {\r\n\t\t\t\treturn index !== id;\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n      </div>\r\n\t\t\t<button onClick={deleteItem}>Delete</button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import './ExpensesList.css';\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\nconst ExpensesList = (props) => {\r\n\r\nif (props.items.length === 0) {\r\n\treturn <h2 className=\"expenses-list__fallback\">Found no expenses</h2> \r\n};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ul className=\"expenses-list\">\r\n\t\t\t\t{props.items.map((expense) => (\r\n\t\t<ExpenseItem\r\n\t\t\tkey={expense.id}\r\n\t\t\ttitle={expense.title}\r\n\t\t\tamount={expense.amount}\r\n\t\t\tdate={expense.date}\r\n\t\t\t\r\n\t\t/>\r\n\t))}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ExpensesList;\r\n","import \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n\tconst dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n\tconst totalMax = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMax}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = props => {\r\n\tconst chartDataPoints = [\r\n\t\t{ label: 'Jan', value: 0 },\r\n\t\t{ label: 'Feb', value: 0 },\r\n\t\t{ label: 'Mar', value: 0 },\r\n\t\t{ label: 'Apr', value: 0 },\r\n\t\t{ label: 'May', value: 0 },\r\n\t\t{ label: 'Jun', value: 0 },\r\n\t\t{ label: 'Jul', value: 0 },\r\n\t\t{ label: 'Aug', value: 0 },\r\n\t\t{ label: 'Sep', value: 0 },\r\n\t\t{ label: 'Oct', value: 0 },\r\n\t\t{ label: 'Nov', value: 0 },\r\n\t\t{ label: 'Dec', value: 0 }\r\n\t];\r\n\r\n\tfor (const expense of props.expense) {\r\n\t\tconst expenseMonth = expense.date.getMonth();\r\n\t\tchartDataPoints[expenseMonth].value += expense.amount;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Chart dataPoints={chartDataPoints} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ExpensesChart\r\n","import { useState } from \"react\";\r\nimport \"../Expenses/Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filterYear, setFilterYear] = useState(\"2020\");\r\n\r\n  const filterChangeHandler = (selectYear) => {\r\n    setFilterYear(selectYear);\r\n  };\r\n\r\n  const yearExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filterYear;\r\n  });\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          yearInput={filterYear}\r\n          changeFilter={filterChangeHandler}\r\n        />\r\n\t\t\t\t<ExpensesChart expense={yearExpenses} />\r\n\t\t\t\t<ExpensesList items={yearExpenses}/>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate + 'T00:00:00'),\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={submitHandler}>\r\n        <div className=\"new-expense__controls\">\r\n          <div className=\"new-expense__control\">\r\n            <label>Title</label>\r\n            <input\r\n              type=\"text\"\r\n              value={enteredTitle}\r\n              onChange={titleChangeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Amount</label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0.01\"\r\n              step=\"0.01\"\r\n              value={enteredAmount}\r\n              onChange={amountChangeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Date</label>\r\n            <input\r\n              type=\"date\"\r\n              min=\"2019-01-01\"\r\n              max=\"2022-12-31\"\r\n              value={enteredDate}\r\n              onChange={dateChangeHandler}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n\t\t\t\t\t<button type=\"button\" onClick={props.onCancel} >Cancel</button>\r\n          <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [addExpense, setAddExpense] = useState(false);\r\n\r\n  const addExpenseHandler = () => {\r\n    setAddExpense(true);\r\n  };\r\n\r\n  const cancelExpenseHandler = () => {\r\n    setAddExpense(false);\r\n  };\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n\t\tsetAddExpense(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!addExpense && <button onClick={addExpenseHandler}>Add Expense</button>}\r\n      {addExpense && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={cancelExpenseHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import { useState } from 'react';\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst DUMMY_EXPENSES = [];\n\nconst App = () => {\n \nconst [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n\tconst addExpenseHandler = expense => {\n\t\tsetExpenses(prevExpenses => {\n\t\t\treturn [expense, ...prevExpenses];\n\t\t});\n\t};\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n\t\t\t<Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}